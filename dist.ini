; This file is generated from dist.ini.meta by dzil bakeini.
; Edit that file or the bundles contained within for long-term changes.
name = CPAN-Meta-YAML
author = Adam Kennedy <adamk@cpan.org>
author = David Golden <dagolden@cpan.org>
license = Perl_5
copyright_holder = Adam Kennedy
copyright_year = 2010

[Doppelgaenger]
:version = 0.007
source_module = YAML::Tiny
strip_pod = 1
strip_version = 1
exclude_filename = t/00-report-prereqs.t
exclude_filename = t/00-report-prereqs.dd

[Encoding / corpus]
encoding = bytes
filename = t/README.md
matches = ^t/data/
matches = ^t/tml

[Git::NextVersion]
version_regexp = ^release-(.+)$

[PkgVersion]

[AppendExternalData]
source_dir = pod

[Git::Contributors]

; pick up Changes files; exclude all else with MANIFEST.SKIP
[Git::GatherDir]

[PruneCruft]

[ManifestSkip]

; after ManifestSkip plugin
[PruneFiles]
filename = MANIFEST.SKIP

[PodWeaver]

[Pod2Readme]

[License]

[Test::Compile]
fake_home = 1
xt_mode = 1

[Test::ReportPrereqs]

[MetaTests]

[PodSyntaxTests]

[Test::Version]

[Authority]
authority = cpan:DAGOLDEN
do_munging = 0

[MinimumPerl]

[AutoPrereqs]
skip = ^YAML

[RemovePrereqs]
remove = JSON::MaybeXS

[MetaNoIndex]
directory = t
directory = xt
directory = examples
directory = corpus
package = DB

[MetaProvides::Package]
meta_noindex = 1

[GithubMeta]
issues = 0
remote = origin
remote = github

[MetaResources]
bugtracker.web = https://github.com/Perl-Toolchain-Gang/YAML-Tiny/issues

[Prereqs::AuthorDeps]

[MetaYAML]

[MetaJSON]

[ExecDir]

[ShareDir]

[MakeMaker]
default_jobs = 9
eumm_version = 6.17

[MakeMaker::Highlander]
:version = 0.003

[PromptIfStale]
check_all_plugins = 1
modules = Dist::Zilla

[Manifest]

[Git::CheckFor::CorrectBranch]

[Git::Check]

[CheckMetaResources]

[CheckPrereqsIndexed]

[CheckChangesHasContent]

[RunExtraTests]
default_jobs = 9

[TestRelease]

[ConfirmRelease]

[UploadToCPAN]

[Git::Tag]
tag_format = release-%v

[NextRelease]
:version = 5.033
time_zone = UTC
format = %-8v  %{yyyy-MM-dd HH:mm:ss'Z'}d%{ (TRIAL RELEASE)}T

[Git::Commit]
allow_dirty = Changes
commit_msg = After release: timestamp Changes

[Git::Push]
push_to = origin

